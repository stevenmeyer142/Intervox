package com.brazedblue.intervox.data;import java.util.Vector;import com.brazedblue.intervox.util.Debug;public class DataChangedEvent extends java.util.EventObject /* implements anInterface */ {  	private int	fEventNumber;	private int	fValue;	private String fMessage;		private Vector fDebugListenedToList;    	static final public int START_L0ADING 	= 1000;	static final public int L0ADING 	= START_L0ADING + 1;	static final public int LOADED	= L0ADING +1;	static final public int SELECTED	= LOADED +1;	static final public int CHANGED	= SELECTED +1;	public DataChangedEvent(Object source, int eventNumber, int value, String message) 	{		super(source);				fEventNumber = eventNumber;		fValue = value;		fMessage = message;		fDebugListenedToList = Debug.fgDebugging ? new Vector() : null;    }		public int GetEventNumber()	{		return fEventNumber;	}	public int GetValue()	{		return fValue;	}		public String GetMessage()	{		return fMessage;	}			// use this to check for duplicate listened to's	void DebugCheckListenedToList(DataModelListener listener)	{		if (fDebugListenedToList != null)		{			if (fDebugListenedToList.contains(listener))			{				Debug.PrintStackTrace("Duplicate listener: " + listener);			}			else			{				fDebugListenedToList.addElement(listener);			}		}	}	}