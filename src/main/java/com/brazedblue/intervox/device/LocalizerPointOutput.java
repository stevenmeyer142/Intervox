package com.brazedblue.intervox.device;import com.brazedblue.intervox.geometry.*;import com.brazedblue.intervox.util.*;import javax.vecmath.*;public class LocalizerPointOutput extends DeviceOutput {  FloatPoint fOriginalCoord;  FloatPoint fPointCoordinate;  Matrix3 fRotationMatrix;  private LocalizerPointOutput(FloatPoint coordinate, Matrix3 rotation, int station) {    fOriginalCoord = coordinate;    fRotationMatrix = rotation;    SetStation(station);  }  //	in case I want to make this more efficient by reuse of objects  //	private constructor  public static LocalizerPointOutput GetNewLocalizerPoint(      FloatPoint coordinate, Matrix3 rotation, int station) {    return new LocalizerPointOutput(coordinate, rotation, station);  }  public void SetPointCoordinate(FloatPoint point) {    fPointCoordinate = point;  }  public Object GetDataOfType(int type) {    Object result = null;    switch (type) {      case ORIG_COORDINATE:        result = fOriginalCoord;        break;      case POINT_COORDINATE:        result = (fPointCoordinate != null) ? fPointCoordinate : fOriginalCoord;        break;      case ROTATION_MATRIX:        result = fRotationMatrix;        break;      default:        result = super.GetDataOfType(type);        break;    }    return result;  }}