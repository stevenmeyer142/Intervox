package com.brazedblue.intervox.dicom;import com.brazedblue.intervox.util.*;import java.io.*;import java.util.*;public class DicomDataDictionary /* implements anInterface */ {  private Hashtable fEntries = new Hashtable();  private static DicomDataDictionary fsDictionary;  public DicomDataDictionary() {}  public void Read(Reader reader) throws IOException {    DicomDictionaryReader dictionaryReader = new DicomDictionaryReader(reader);    DicomDictionaryEntry entry = dictionaryReader.GetNextEntry();    while (entry != null) {      String key = entry.GetKey();      if (!fEntries.containsKey(key)) {        fEntries.put(key, entry);      }      entry = dictionaryReader.GetNextEntry();    }  }  public static String GetDescription(DicomElementTag tag) {    DicomDictionaryEntry entry = null;    try {      entry = GetDictionary().GetEntry(tag);    } catch (IOException e) {    }    return (entry != null ? entry.GetName() : "");  }  public static DicomDataDictionary GetDictionary() throws IOException {    if (fsDictionary == null) {      throw new IOException("The dictionary has not been initialized.");    }    return fsDictionary;  }  public static void CreateFromJarResource(String fileName) {    if (fsDictionary == null) {      fsDictionary = new DicomDataDictionary();      try {        //					InputStream resource = fsDictionary.getClass().getResourceAsStream(fileName);        //				if (resource == null)        //				{        //					NeuroSynchUtil.ErrorMessage("Error DataDictionary.CreateFromFile missing dictionary        // resource", NeuroSynchUtil.kShowDlog);        //					return;        //				}        InputStream resource = new FileInputStream(fileName);        InputStreamReader reader = new InputStreamReader(resource);        fsDictionary.Read(reader);        reader.close();      } catch (FileNotFoundException e) {        NeuroSynchUtil.ErrorMessage(            "Error DataDictionary.CreateFromFile" + e.getMessage(), NeuroSynchUtil.kShowDlog);      } catch (IOException e2) {        NeuroSynchUtil.ErrorMessage(            "Error DataDictionary.CreateFromFile" + e2.getMessage(), NeuroSynchUtil.kShowDlog);      }    }  }  public static void CreateFromFileIfNecessary(String fileName) {    if (fsDictionary == null) {      fsDictionary = new DicomDataDictionary();      try {        FileReader reader = new FileReader(fileName);        fsDictionary.Read(reader);        reader.close();      } catch (FileNotFoundException e) {        NeuroSynchUtil.ErrorMessage(            "Error DataDictionary.CreateFromFile" + e.getMessage(), NeuroSynchUtil.kShowDlog);      } catch (IOException e2) {        NeuroSynchUtil.ErrorMessage(            "Error DataDictionary.CreateFromFile" + e2.getMessage(), NeuroSynchUtil.kShowDlog);      }    }  }  public static DicomValueRep GetImplicitValueRep(DicomElementTag tag) throws IOException {    DicomDictionaryEntry entry = GetDictionary().GetEntry(tag);    if (entry == null) {      NeuroSynchUtil.ErrorMessage(          "Can't find tag '" + tag.GetString() + "' in dictionary", NeuroSynchUtil.kNoDlog);      return new DicomValueRep("  ", DicomValueRep.IMPLICIT);    }    return entry.GetValueRep();  }  private DicomDictionaryEntry GetEntry(DicomElementTag tag) throws IOException {    return (DicomDictionaryEntry) fEntries.get(tag.GetString());  }}