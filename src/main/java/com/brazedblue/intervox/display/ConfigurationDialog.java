package com.brazedblue.intervox.display;import com.brazedblue.intervox.data.*;import com.brazedblue.intervox.main.NSMainActor;import com.brazedblue.intervox.tracker.TrackerController;import java.awt.*;import java.awt.event.*;import javax.swing.*;import javax.swing.border.*;public class ConfigurationDialog extends JDialog /* implements anInterface */ {  private ConfigurationManager fConfigurationManager;  private JPanel fMainControlsPanel;  private ConfigurationChoicesPanel fConfigurationsPanel;  private ConfigurationEditPanel fConfigurationEditPanel;  //	private DataManager 				fDataManager;  private ConfigEditModel fConfigEditModel;  private Dimension fPreferredSize = new Dimension(700, 700);  private static final String kCloseString = "Close";  public ConfigurationDialog(      ConfigurationManager configManager,      TrackerController tracker,      ConfigEditModel configEditModel) {    super(NSMainActor.fgMainActor.GetFrame(), "Configuration", true);    setDefaultCloseOperation(DISPOSE_ON_CLOSE);    fConfigEditModel = configEditModel;    fConfigurationManager = configManager;    //		fDataManager = dataManager;    //		setPreferredSize(new Dimension(700, 450));    Container contentPane = getContentPane();    contentPane.setLayout(new BoxLayout(contentPane, BoxLayout.X_AXIS));    fConfigurationEditPanel = new ConfigurationEditPanel(fConfigEditModel, tracker);    contentPane.add(fConfigurationEditPanel);    contentPane.add(Box.createHorizontalGlue());    JPanel rightPanel = new JPanel();    rightPanel.setLayout(new BoxLayout(rightPanel, BoxLayout.Y_AXIS));    contentPane.add(rightPanel);    rightPanel.setBorder(BorderFactory.createEtchedBorder());    fConfigurationsPanel = new ConfigurationChoicesPanel(fConfigEditModel, fConfigurationManager);    rightPanel.add(fConfigurationsPanel);    rightPanel.add(Box.createVerticalGlue());    fMainControlsPanel = new JPanel();    fMainControlsPanel.setLayout(new BoxLayout(fMainControlsPanel, BoxLayout.Y_AXIS));    rightPanel.add(fMainControlsPanel);    fMainControlsPanel.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));    JButton closeButton = new JButton(kCloseString);    closeButton.addActionListener(        new ActionListener() {          public void actionPerformed(ActionEvent e) {            dispose();          }        });    fMainControlsPanel.add(closeButton);    WindowAdapter adapter =        new WindowAdapter() {          public void windowClosed(WindowEvent e) {            if (fConfigurationManager != null) {              fConfigurationManager.WriteOutConfigurations();              fConfigurationManager = null;              fConfigEditModel.Finish();              fConfigEditModel = null;            }            if (fConfigurationEditPanel != null) {              fConfigurationEditPanel.Dispose();              fConfigurationEditPanel = null;            }          }        };    addWindowListener(adapter);  }  public Dimension getPreferredSize() {    return fPreferredSize;  }  private Configuration GetSelectedConfiguration() {    return fConfigEditModel.GetSelectedConfiguration();  }  /*     private void SaveConfiguration()     {  		SaveConfigDialog.DoConfigurationSave(fConfigurationManager, GetSelectedConfiguration(), fDataManager);     }  */}