package com.brazedblue.intervox.display;import javax.swing.*;import java.awt.event.*;import java.awt.*;import com.brazedblue.intervox.util.NeuroSynchUtil;import com.brazedblue.intervox.data.*;import com.brazedblue.intervox.tracker.TrackerController;class LocalizerOptionsPane extends JPanel  {  	private Configuration 		fConfiguration;	private TrackerController 	fTracker;		private JComboBox fDevicesPopup;	private JComboBox fSerialPortPopup;		static private final String kDevicesLabel = "Device:";	static private final String kSerialPortLabel = "Serial Port:";	     public LocalizerOptionsPane(TrackerController tracker, Configuration config) 	{		fConfiguration = config;		fTracker = tracker;				setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));				Box box = new Box(BoxLayout.X_AXIS);		add(box);		JLabel label = new JLabel(kDevicesLabel);		box.add(label);		box.add(Box.createHorizontalStrut(8));				Localizer localizer = fConfiguration.GetLocalizer();		fDevicesPopup = new JComboBox(localizer.GetDeviceList()){			public Dimension getMaximumSize()			{				return getPreferredSize();			}		};		box.add(fDevicesPopup);		fDevicesPopup.setEditable(false);		fDevicesPopup.setSelectedItem(localizer.GetDeviceLabel());		ActionListener l = new ActionListener()		{			public void actionPerformed(ActionEvent e)			{				if (fConfiguration != null)				{					String device = (String)fDevicesPopup.getSelectedItem();					Localizer currentLocalizer = fConfiguration.GetLocalizer();					if (!device.equals(currentLocalizer.GetDeviceLabel()))					{						currentLocalizer.SetDeviceLabel(device);						UpdateTracker();					}				}			}					};		fDevicesPopup.addActionListener(l);			/*		doesn't work anymore, use ActionListener 3/24/05 java 1.4.2		ItemListener deviceListener = new ItemListener()		{   			public void itemStateChanged(ItemEvent e)			{				if (e.getStateChange() == ItemEvent.SELECTED)				{				 	String device = (String)e.getItem();					Localizer currentLocalizer = fConfiguration.GetLocalizer();										if (!device.equals(currentLocalizer.GetDeviceLabel()))					{						currentLocalizer.SetDeviceLabel(device);						UpdateTracker();					}				}			}		};		fDevicesPopup.addItemListener(deviceListener);*/		 		box = new Box(BoxLayout.X_AXIS);		add(box);				add(Box.createVerticalGlue());				label = new JLabel(kSerialPortLabel);		box.add(label);		box.add(Box.createHorizontalStrut(8));				fSerialPortPopup = new JComboBox(localizer.GetSerialPortList()){			public Dimension getMaximumSize()			{				return getPreferredSize();			}		};				box.add(fSerialPortPopup);		fSerialPortPopup.setEditable(false);		fSerialPortPopup.setSelectedItem(localizer.GetPortLabel());				l = new ActionListener()		{			public void actionPerformed(ActionEvent e)			{				if (fConfiguration != null)				{					String port = (String)fSerialPortPopup.getSelectedItem();					Localizer currentLocalizer = fConfiguration.GetLocalizer();										if (!port.equals(currentLocalizer.GetPortLabel()))					{						currentLocalizer.SetPortLabel(port);						UpdateTracker();					}				}			}		};		fSerialPortPopup.addActionListener(l);/*		doesn't work anymore, use ActionListener 3/24/05 java 1.4.2 		ItemListener serialPortListener = new ItemListener()		{   			public void itemStateChanged(ItemEvent e)			{				if (e.getStateChange() == ItemEvent.SELECTED)				{				 	String device = (String)e.getItem();					Localizer currentLocalizer = fConfiguration.GetLocalizer();										if (!device.equals(currentLocalizer.GetPortLabel()))					{						currentLocalizer.SetPortLabel(device);						UpdateTracker();					}				}			}		};	fSerialPortPopup.addItemListener(serialPortListener);*/   	}		public void SetConfiguration(Configuration config)	{		fConfiguration = null;	// avoid actionlisteners being called		Localizer localizer = config.GetLocalizer();		fDevicesPopup.setSelectedItem(localizer.GetDeviceLabel());		fSerialPortPopup.setSelectedItem(localizer.GetPortLabel());				fConfiguration = config;	}      	private void UpdateTracker()   	{   		fTracker.SetConfiguration(fConfiguration);   	}  }