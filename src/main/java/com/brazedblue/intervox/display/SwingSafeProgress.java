package com.brazedblue.intervox.display;import javax.swing.*;public class SwingSafeProgress implements ProgressBroadcaster {  ProgressBroadcaster fProgress;  boolean fCancelled = false;  String fCancelledMessage;  boolean fMacOSX = true;  public SwingSafeProgress(ProgressBroadcaster progress) {    fProgress = progress;  }  public final void Start(String message, int low, int high) {    if (SwingUtilities.isEventDispatchThread() || fMacOSX) {      fProgress.Start(message, low, high);    } else {      SwingUtilities.invokeLater(new StartTask(message, low, high));    }  }  public final void UpdateCurrentValue(String note, int value) throws ProgressCancelledException {    if (SwingUtilities.isEventDispatchThread() || fMacOSX) {      fProgress.UpdateCurrentValue(note, value);    } else {      if (!fCancelled) {        SwingUtilities.invokeLater(new UpdateTask(note, value));      } else {        throw new ProgressCancelledException(fCancelledMessage);      }    }  }  public void Finish(boolean successful) {    if (SwingUtilities.isEventDispatchThread() || fMacOSX) {      fProgress.Finish(successful);    } else {      SwingUtilities.invokeLater(new EndTask(successful));    }  }  class StartTask implements Runnable {    int fLow;    int fHigh;    String fMessage;    StartTask(String message, int low, int high) {      fMessage = message;      fLow = low;      fHigh = high;    }    public void run() {      fProgress.Start(fMessage, fLow, fHigh);    }  }  class UpdateTask implements Runnable {    int fValue;    String fNote;    UpdateTask(String note, int value) {      fValue = value;      fNote = note;    }    public void run() {      try {        fProgress.UpdateCurrentValue(fNote, fValue);      } catch (ProgressCancelledException e) {        fCancelled = true;        fCancelledMessage = e.getMessage();      }    }  }  class EndTask implements Runnable {    boolean fSuccessful;    EndTask(boolean successful) {      fSuccessful = successful;    }    public void run() {      fProgress.Finish(fSuccessful);    }  }}