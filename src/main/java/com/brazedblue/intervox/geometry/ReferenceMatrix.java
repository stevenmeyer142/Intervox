package com.brazedblue.intervox.geometry;public class ReferenceMatrix {  Matrix3 fOrientation = new Matrix3();  Matrix3 fInvertedOrientation = new Matrix3();  FloatPoint fCurrentOrigin = new FloatPoint();  public ReferenceMatrix(ReferenceState refState) {    SetCurrentReference(refState.GetRotation(), refState.GetLocation());  }  public ReferenceMatrix() {}  public void SetCurrentReference(Matrix3 rotation, Location3D location) {    fCurrentOrigin.Set(location);    fOrientation.Set(rotation);    fInvertedOrientation.Set(rotation);    fInvertedOrientation.invert();  }  public void SetCurrentReference(ReferenceState state) {    SetCurrentReference(state.GetRotation(), state.GetLocation());  }  public void TransformVector(ThreeDVector vector) {    fInvertedOrientation.transform(vector);  }  public void TransformPoint(FloatPoint point) {    point.Subtract(fCurrentOrigin);    fInvertedOrientation.transform(point);  }  public void InverseTransformVector(ThreeDVector vector) {    fOrientation.transform(vector);  }  public void InverseTransformPoint(FloatPoint point) {    fOrientation.transform(point);    point.Add(fCurrentOrigin);  }}