package com.brazedblue.intervox.geometry;import com.brazedblue.intervox.util.NeuroSynchUtil;// my own implementation to reuse stack objects, more efficientpublic class SeedFillSegment3DStack extends java.util.Vector {  int fCurrentPos = 0;  public SeedFillSegment3DStack() {}  public void Reset() {    fCurrentPos = 0;    removeAllElements(); // This shouldn't be necessary, but it removes a bug  }  public int GetSize() {    return fCurrentPos;  }  public void Push(int y, int z, int leftX, int rightX, int dy, int dz) {    if (fCurrentPos >= super.size()) {      addElement(new SeedFillSegment3D(y, z, leftX, rightX, dy, dz));      fCurrentPos++;    } else {      SeedFillSegment3D seg = (SeedFillSegment3D) elementAt(fCurrentPos++);      seg.fY = y;      seg.fZ = z;      seg.fLeftX = leftX;      seg.fRightX = rightX;      seg.fDY = dy;      seg.fDZ = dz;    }  }  public void Pop(SeedFillSegment3D seg) {    if (fCurrentPos > 0) {      SeedFillSegment3D result = (SeedFillSegment3D) elementAt(--fCurrentPos);      seg.fY = result.fY;      seg.fZ = result.fZ;      seg.fLeftX = result.fLeftX;      seg.fRightX = result.fRightX;      seg.fDY = result.fDY;      seg.fDZ = result.fDZ;    } else {      NeuroSynchUtil.ErrorMessage("Trying to pop an empty stack", false);    }  }}class SeedFillSegment3D {  int fY;  int fZ;  int fLeftX;  int fRightX;  int fDY;  int fDZ;  public SeedFillSegment3D(int y, int z, int leftX, int rightX, int dy, int dz) {    fY = y;    fZ = z;    fLeftX = leftX;    fRightX = rightX;    fDY = dy;    fDZ = dz;  }}