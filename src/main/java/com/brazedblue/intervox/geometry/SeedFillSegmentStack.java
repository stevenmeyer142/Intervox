package com.brazedblue.intervox.geometry;import com.brazedblue.intervox.util.NeuroSynchUtil;// my own implementation to reuse stack objects, more efficientpublic class SeedFillSegmentStack extends java.util.Vector {	int fCurrentPos = 0;	public SeedFillSegmentStack()	{	}		public void Reset()	{		fCurrentPos = 0;				removeAllElements();  // This shouldn't be necessary, but it removes a bug	}		public int GetSize()	{		return fCurrentPos;	}		public void Push(int y, int leftX, int rightX, int dy)	{		if (fCurrentPos >= super.size())		{			addElement(new SeedFillSegment(y, leftX, rightX, dy));			fCurrentPos++;		}		else		{			SeedFillSegment seg = (SeedFillSegment)elementAt(fCurrentPos++);			seg.fY = y;			seg.fLeftX = leftX;			seg.fRightX = rightX;			seg.fDY = dy;					}	}		public void Pop(SeedFillSegment seg)	{		if (fCurrentPos > 0)		{			SeedFillSegment result = (SeedFillSegment)elementAt(--fCurrentPos);			seg.fY = result.fY;			seg.fLeftX = result.fLeftX ;			seg.fRightX = result.fRightX;			seg.fDY = result.fDY;		}		else		{			NeuroSynchUtil.ErrorMessage("Trying to pop an empty stack", false);		}	}}class SeedFillSegment  {	int fY;	int fLeftX;	int	fRightX;	int fDY;      public SeedFillSegment(int y, int leftX, int rightX, int dy) 	{		fY = y;		fLeftX = leftX;		fRightX = rightX;		fDY = dy;    }  }