package com.brazedblue.intervox.registration;import java.util.*;import java.awt.event.*;import javax.swing.JComboBox;import javax.swing.JComponent;import javax.swing.DefaultComboBoxModel;import com.brazedblue.intervox.data.*;import com.brazedblue.intervox.image.*;public class SpaceLinkSelector implements DataModelListener {    	private Vector 					fSpaceLinksListeners = new Vector(); 	private CoRegistrationsAccess 	fCoRegistrations = null;	private JComboBox				fSpaceLinksComboBox = null;	private SpaceLink[]				fSpaceLinksList;  	public SpaceLinkSelector() 	{		fSpaceLinksComboBox = new JComboBox();				ItemListener spacesListener = new ItemListener()		{   			public void itemStateChanged(ItemEvent e)			{				SpaceLink item = (SpaceLink)e.getItem();				if (e.getStateChange() == ItemEvent.SELECTED)				{					FireSpaceLinkSelectedAction(item, true);				}				else if (e.getStateChange() == ItemEvent.DESELECTED)				{					FireSpaceLinkSelectedAction(item, false);				}			}		};				fSpaceLinksComboBox.addItemListener(spacesListener);		    }			public void Dispose()	{		fCoRegistrations = null;		fSpaceLinksComboBox = null;		fSpaceLinksListeners = null;		fSpaceLinksList = null;	}		public JComponent GetControl()	{		return fSpaceLinksComboBox;	}		public void AddSpaceLinkSelectListener(SpaceLinkSelectorListener l)	{		if (!fSpaceLinksListeners.contains(l))		{ 			fSpaceLinksListeners.addElement(l);		}	}		public void SetCoRegistrations(CoRegistrationsAccess coRegistrations)	{		if (fCoRegistrations != null)		{			fCoRegistrations.GetDataModel().RemoveListener(this);		}					fCoRegistrations = coRegistrations;				if (fCoRegistrations != null)		{			fCoRegistrations.GetDataModel().AddListener(this);			UpdateSpaceLinksList();		}		}		public void SetSelectedSpaceLink(SpaceLink spaceLink)	{		for (int i = 0; i < fSpaceLinksList.length; i++)		{			if (fSpaceLinksList[i].equals(spaceLink))			{				fSpaceLinksComboBox.setSelectedIndex(i);				break;			}		}	}	public void RemoveSpaceSelectLinkListener(SpaceLinkSelectorListener l)	{ 		fSpaceLinksListeners.removeElement(l);	}		private void FireSpaceLinkSelectedAction(SpaceLink spaceLink, boolean selected)	{		Enumeration elements = fSpaceLinksListeners.elements();		while (elements.hasMoreElements())		{			SpaceLinkSelectorListener listener = (SpaceLinkSelectorListener)elements.nextElement();						listener.SpaceLinkSelected(spaceLink, selected);					}	}		public void DataModelChanged(DataModel model, DataChangedEvent event)	{		if ((fCoRegistrations != null) && (model == fCoRegistrations.GetDataModel()))		{			UpdateSpaceLinksList();		}	}		public SpaceLink GetSelectedSpaceLink()	{		int  index = fSpaceLinksComboBox.getSelectedIndex();		SpaceLink result = null;				if (index >= 0 && index < fSpaceLinksList.length)		{			result = fSpaceLinksList[index];		}				return result;	}		private void UpdateSpaceLinksList()	{		SpaceLink savedSelectedSpaceLink = GetSelectedSpaceLink();			SpaceLink[] registrationSpaceLinks = fCoRegistrations.GetAllRegistrationPairings();				fSpaceLinksList = new SpaceLink[registrationSpaceLinks.length];				for (int i = 0; i < fSpaceLinksList.length; i++)		{			fSpaceLinksList[i] = new SpaceLinkSelectorSpaceLink(registrationSpaceLinks[i]);		}				fSpaceLinksComboBox.setModel(new DefaultComboBoxModel(fSpaceLinksList));				SetSelectedSpaceLink(savedSelectedSpaceLink);	}		private static class SpaceLinkSelectorSpaceLink implements SpaceLink	{		private SingleSpaceID 	fSpace1;		private SingleSpaceID	fSpace2;				private SpaceLinkSelectorSpaceLink(SpaceLink spaceLink)		{			fSpace1 = spaceLink.GetSpace1();			fSpace2 = spaceLink.GetSpace2();		}				public SingleSpaceID GetSpace1()		{			return fSpace1;		}			public SingleSpaceID GetSpace2()		{			return fSpace2;		}				public boolean equals(Object obj)		{			boolean result = false;						if (obj instanceof SpaceLink)			{				result = SortedSpaceLinksTable.SpaceLinkComparator.Compare(this, (SpaceLink)obj) == 0;			}						return result;		}				public String toString()		{			return fSpace1.GetName() + "  <->  " + fSpace2.GetName();		}	}		public interface SpaceLinkSelectorListener 	{		public void SpaceLinkSelected(SpaceLink spaceLink, boolean selected);	}}