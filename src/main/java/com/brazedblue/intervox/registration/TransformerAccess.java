package com.brazedblue.intervox.registration;import com.brazedblue.intervox.device.LocalizerPointOutput;import com.brazedblue.intervox.geometry.FloatPoint;import com.brazedblue.intervox.geometry.ThreeDVector;import com.brazedblue.intervox.geometry.TransformationMatrix;import com.brazedblue.intervox.image.SingleSpaceID;public interface TransformerAccess {  public boolean CanTransform(SingleSpaceID fromSpace, SingleSpaceID toSpace);  public boolean CanUseReferenceFrame();  public FloatPoint TransformPoint(FloatPoint pt, SingleSpaceID fromSpace, SingleSpaceID toSpace);  public ThreeDVector TransformVector(      ThreeDVector pt, SingleSpaceID fromSpace, SingleSpaceID toSpace);  public void InstallTransformation(      TransformationMatrix transformer, SingleSpaceID fromSpace, SingleSpaceID toSpace);  public boolean CanTransformFrom(SingleSpaceID fromSpace);  public void ProcessLocalizerPoint(LocalizerPointOutput output);  public boolean IsUsingReference();  public void SetUsingReference(boolean usingReference);  public TransformationTypeModel GetTransformationType(      SingleSpaceID fromSpace, SingleSpaceID toSpace);}