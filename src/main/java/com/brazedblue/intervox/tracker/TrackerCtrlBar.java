package com.brazedblue.intervox.tracker;import com.brazedblue.intervox.device.DeviceOutput;import com.brazedblue.intervox.display.*;import com.brazedblue.intervox.util.*;import java.awt.*;import java.awt.event.*;import javax.swing.*;public class TrackerCtrlBar extends JPanel {  private TrackerController fTrackerController;  private JPanel fButtonsPanel;  private JPanel fLabelsPanel;  private boolean fSleep = false;  public TrackerCtrlBar(TrackerController trackerController) {    setLayout(new BoxLayout(this, BoxLayout.X_AXIS));    fTrackerController = trackerController;    fButtonsPanel = new JPanel();    fButtonsPanel.setAlignmentY(TOP_ALIGNMENT);    fButtonsPanel.setLayout(new BoxLayout(fButtonsPanel, BoxLayout.Y_AXIS));    fButtonsPanel.setBorder(BorderFactory.createRaisedBevelBorder());    add(fButtonsPanel);    fTrackerController.AddControlButtons(fButtonsPanel);    fTrackerController.EnableItems();    /*		JPanel propertiesPanel = new JPanel() {    	public Dimension getMaximumSize()    	{    		return getPreferredSize();    	}    }; */    JPanel propertiesPanel = new JPanel(new FlowLayout());    propertiesPanel.setAlignmentY(TOP_ALIGNMENT);    //		propertiesPanel.setLayout(new BoxLayout(propertiesPanel, BoxLayout.X_AXIS));    propertiesPanel.setBorder(BorderFactory.createRaisedBevelBorder());    add(propertiesPanel);    fLabelsPanel = new JPanel(new GridLayout(fTrackerController.GetNumberOfLabels(), 1));    propertiesPanel.add(fLabelsPanel);    fTrackerController.AddConfigurationLabels(fLabelsPanel);    JPanel valuesPanel = new JPanel(new GridLayout(fTrackerController.GetNumberOfLabels(), 1));    propertiesPanel.add(valuesPanel);    fTrackerController.AddConfigurationValues(valuesPanel);    CoordinatesDisplay coordsDisplay = new CoordinatesDisplay();    coordsDisplay.setAlignmentY(TOP_ALIGNMENT);    coordsDisplay.setBorder(BorderFactory.createRaisedBevelBorder());    add(coordsDisplay);    coordsDisplay.SetLabels(CoordinatesDisplay.kXYZLabel);    fTrackerController.AddTrackerListener(        coordsDisplay, 250, false, DeviceOutput.STATION1); // , frequency, wants transformed points    fTrackerController.AddTrackerListener(        coordsDisplay, 250, false, DeviceOutput.STATION2); // , frequency, wants transformed points    //		coordsDisplay.setBounds(0, 80, 400, 160);  }  public void Dispose() {    if (fTrackerController != null) {      fTrackerController.RemoveControlButtons(fButtonsPanel);      fTrackerController.RemoveConfigurationLabels(fLabelsPanel);    }  }  public void SetSleep(boolean sleep) {    //	to be implement  }  public static NSInternalFrame CreateTrackerFrame(TrackerController trackerController) {    NSInternalFrame result = new NSInternalFrame("Tracker", true, true);    Container contentPane = result.getContentPane();    TrackerCtrlBar ctrlBar = new TrackerCtrlBar(trackerController);    contentPane.add(ctrlBar);    return result;  }}