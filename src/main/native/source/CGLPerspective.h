// CGLPerspective.h// Created by Steve on Mon, Aug 7, 2000 @ 11:29 AM.#ifndef __CGLPerspective__#define __CGLPerspective__struct DblRect{	DblRect(double l, double r, double t, double b)  : 		left(l), right(r), top(t),  bottom(b) 	{	}		DblRect() : left(0), right(0), top(0),  bottom(0) 	{	}	double left;	double right;	double top; 	double bottom;};struct DblPoint{	DblPoint(double horiz, double vert) : h(horiz), v(vert)	{	}	DblPoint() : h(0), v(0)	{	}	double h;	double v;};class CGLPerspective{	bool 		fOrthogonal;	bool 		fRotate;		DblRect 	fViewBox;	double 		fNear; 	double 		fFar;		DblPoint	fFocus;		double 		fZoom;	public:	CGLPerspective();		virtual ~CGLPerspective();		void Update();		void SetOrthogonal(bool ortho) { fOrthogonal = ortho; }		void SetValues(double left, double right, double bottom, double top, double near, double far);	void Zoom(float factor);			void SetZoomFocus(double h, double v);		void SetAbsoluteZoomFocus(double h, double v) { fFocus.h = h; fFocus.v = v; }		void AbsoluteZoom(float zoom);		void GetFocus(DblPoint focus) { focus = fFocus; }	void GetViewBox(DblRect &box);};#endif